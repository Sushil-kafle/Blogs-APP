name: Lint the Code

permissions:
  contents: read
  pull-requests: read

on:
  pull_request:
    branches: ["dev"]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      backend1: ${{ steps.filter.outputs.backend1 }}
      backend2: ${{ steps.filter.outputs.backend2 }}
      frontend: ${{ steps.filter.outputs.frontend }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            backend1:
              - 'backend1/src/**'
            backend2:
              - 'backend2/src/**'
            frontend:
              - 'frontend/src/**'

  lint-and-scan-backend1:
    needs: detect-changes
    if: needs.detect-changes.outputs.backend1 == 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "yarn"
          cache-dependency-path: backend1/yarn.lock

      - name: Install dependencies
        working-directory: backend1
        run: yarn install --frozen-lockfile

      - name: Lint backend1
        working-directory: backend1
        run: yarn lint

      - name: SonarQube Scan for backend1
        uses: sonarsource/sonarqube-scan-action@v2
        with:
          projectBaseDir: backend1
          args: >
            -Dsonar.projectKey=backend1
            -Dsonar.projectName=Backend1
            -Dsonar.sources=src
            -Dsonar.exclusions=**/node_modules/**
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.qualitygate.wait=true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Install sonar-report tool
        run: yarn global add sonar-report

      - name: Generate HTML report for backend1
        run: |
          mkdir -p sonar-report
          sonar-report -k backend1 \
                       -t ${{ secrets.SONAR_TOKEN }} \
                       -u ${{ secrets.SONAR_HOST_URL }} \
                       -o sonar-report/backend-1-report.html

      - name: Upload HTML report for backend1
        uses: actions/upload-artifact@v4
        with:
          name: sonar-report-backend1
          path: sonar-report/backend-1-report.html

  lint-and-scan-backend2:
    needs: detect-changes
    if: needs.detect-changes.outputs.backend2 == 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "yarn"
          cache-dependency-path: backend2/yarn.lock

      - name: Install dependencies
        working-directory: backend2
        run: yarn install --frozen-lockfile

      - name: Lint backend2
        working-directory: backend2
        run: yarn lint

      - name: SonarQube Scan for backend2
        uses: sonarsource/sonarqube-scan-action@v2
        with:
          projectBaseDir: backend2
          args: >
            -Dsonar.projectKey=backend2
            -Dsonar.projectName=Backend2
            -Dsonar.sources=src
            -Dsonar.exclusions=**/node_modules/**
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.qualitygate.wait=true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Install sonar-report tool
        run: yarn global add sonar-report

      - name: Generate HTML report for backend2
        run: |
          mkdir -p sonar-report
          sonar-report -k backend2 \
                       -t ${{ secrets.SONAR_TOKEN }} \
                       -u ${{ secrets.SONAR_HOST_URL }} \
                       -o sonar-report/backend-2-report.html

      - name: Upload HTML report for backend2
        uses: actions/upload-artifact@v4
        with:
          name: sonar-report-backend2
          path: sonar-report/backend-2-report.html

  lint-and-scan-frontend:
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend == 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "yarn"
          cache-dependency-path: frontend/yarn.lock

      - name: Install dependencies
        working-directory: frontend
        run: yarn install --frozen-lockfile

      - name: Lint frontend
        working-directory: frontend
        run: yarn lint

      - name: SonarQube Scan for frontend
        uses: sonarsource/sonarqube-scan-action@v2
        with:
          projectBaseDir: frontend
          args: >
            -Dsonar.projectKey=frontend
            -Dsonar.projectName=Frontend
            -Dsonar.sources=src
            -Dsonar.exclusions=**/node_modules/**
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.qualitygate.wait=true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Install sonar-report tool
        run: yarn global add sonar-report

      - name: Generate HTML report for frontend
        run: |
          mkdir -p sonar-report
          sonar-report -k frontend \
                       -t ${{ secrets.SONAR_TOKEN }} \
                       -u ${{ secrets.SONAR_HOST_URL }} \
                       -o sonar-report/frontend-report.html

      - name: Upload HTML report for frontend
        uses: actions/upload-artifact@v4
        with:
          name: sonar-report-frontend
          path: sonar-report/frontend-report.html
